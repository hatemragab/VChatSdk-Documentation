"use strict";(self.webpackChunkVChatSdk_Documentation=self.webpackChunkVChatSdk_Documentation||[]).push([[973],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return c}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=p(r),c=o,g=m["".concat(u,".").concat(c)]||m[c]||s[c]||a;return r?n.createElement(g,i(i({ref:t},d),{},{components:r})):n.createElement(g,i({ref:t},d))}));function c(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5972:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return d},default:function(){return m}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],l={sidebar_position:1},u="Group chat",p={unversionedId:"group_chat/group_chat",id:"group_chat/group_chat",isDocsHomePage:!1,title:"Group chat",description:"group chat is optional if you don't follow this users can't create group chat until you implement it",source:"@site/docs/group_chat/group_chat.md",sourceDirName:"group_chat",slug:"/group_chat/group_chat",permalink:"/VChatSdk-Documentation/docs/group_chat/group_chat",editUrl:"https://github.com/hatemragab/v_chat_sdk/docs/group_chat/group_chat.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"how_to_get_backend_code",permalink:"/VChatSdk-Documentation/docs/how_to_get_backend_code/how_to_get_backend_code"},next:{title:"theme",permalink:"/VChatSdk-Documentation/docs/customize package/theme"}},d=[{value:"I have created public apis for group chat to enable full customizable and optional group chat design",id:"i-have-created-public-apis-for-group-chat-to-enable-full-customizable-and-optional-group-chat-design",children:[],level:3},{value:"How to get group info",id:"how-to-get-group-info",children:[],level:3},{value:"to get group users",id:"to-get-group-users",children:[],level:2},{value:"update group title for admins only",id:"update-group-title-for-admins-only",children:[],level:2},{value:"update group image for admins only",id:"update-group-image-for-admins-only",children:[],level:2},{value:"add members to group for admins only",id:"add-members-to-group-for-admins-only",children:[],level:2},{value:"downgrade admin to member for admins only",id:"downgrade-admin-to-member-for-admins-only",children:[],level:2},{value:"upgrade member to admin for admins only",id:"upgrade-member-to-admin-for-admins-only",children:[],level:2},{value:"kick user from group for admins only",id:"kick-user-from-group-for-admins-only",children:[{value:"From admins mean if member try to update will trow exception <code>you dont have access</code>",id:"from-admins-mean-if-member-try-to-update-will-trow-exception-you-dont-have-access",children:[],level:4}],level:2}],s={toc:d};function m(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"group-chat"},"Group chat"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"group chat is ",(0,a.kt)("inlineCode",{parentName:"p"},"optional")," if you don't follow this users can't create group chat until you implement it")),(0,a.kt)("h3",{id:"i-have-created-public-apis-for-group-chat-to-enable-full-customizable-and-optional-group-chat-design"},"I have created public apis for group chat to enable full customizable and optional group chat design"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"to create group chat you need to call this api")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"       await VChatController.instance.createGroupChat(\n        context: context,\n        createGroupRoomDto: CreateGroupRoomDto(\n          groupImage: File(imagePath!),\n          groupTitle: textEditingController.text,\n          usersEmails: users.map((e) => e.email).toList(),\n        ),\n      );\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"usersEmails")," pass users unique id which you send to me when register"),(0,a.kt)("h3",{id:"how-to-get-group-info"},"How to get group info"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"once user click on group image in message page i will run this function ",(0,a.kt)("inlineCode",{parentName:"li"},"onMessageAvatarPressed")," which exist\non ",(0,a.kt)("inlineCode",{parentName:"li"},"VChatRoomsView")," widget")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'      VChatRoomsView(\n        onMessageAvatarPressed: (isGroupChat, uniqueId, vChatGroupChatInfo) {\n          if (isGroupChat) {\n            print("isGroupChat id is $uniqueId");\n            Navigator.push(\n              context,\n              MaterialPageRoute(\n                builder: (_) => GroupChatInfo(\n                  groupId: uniqueId,\n                  groupChatInfo: vChatGroupChatInfo!,\n                ),\n              ),\n            );\n          } else {\n            print("user Email  is $uniqueId");\n          }\n        },\n      ),\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"pass vChatGroupChatInfo to the group info page then you can manage the group"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"vChatGroupChatInfo")," export the following data"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"groupId")," pass groupId you will need it to get group data")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"  final String title;\n  final String imageThumb;\n  final int totalGroupMembers;\n  final VChatUserGroupRole role;\n  final bool isGroupCreator;\n")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"title")," group name"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"imageThumb")," group full image url"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"totalGroupMembers")," group total Members"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"role")," current user role in group ",(0,a.kt)("inlineCode",{parentName:"li"},"[admin,member]")," ar supported"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"isGroupCreator")," is current user is group creator")),(0,a.kt)("h2",{id:"to-get-group-users"},"to get group users"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"  Future getGroupMembers() async {\n    this.members.clear();\n\n    /// this api will get group users if current use already member in this group\n    final members = await VChatController.instance\n        .getGroupMembers(groupId: widget.groupId, paginationIndex: 1);\n\n    setState(() {\n      this.members.addAll(members);\n    });\n  }\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"paginationIndex")," to get next users group which it will return 20 user in each call")),(0,a.kt)("h2",{id:"update-group-title-for-admins-only"},"update group title for admins only"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"                    await VChatController.instance.updateGroupChatTitle(\n                        groupId: widget.groupId, title: txt);\n")),(0,a.kt)("h2",{id:"update-group-image-for-admins-only"},"update group image for admins only"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"        final newImage = await VChatController.instance\n            .updateGroupChatImage(path: img.path, groupId: widget.groupId);\n")),(0,a.kt)("h2",{id:"add-members-to-group-for-admins-only"},"add members to group for admins only"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"                  await VChatController.instance.addMembersToGroupChat(\n                      groupId: widget.groupId,\n                      usersEmails: users.map((e) => e.email).toList());\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"also send user email which you send it to me while registrations")),(0,a.kt)("h2",{id:"downgrade-admin-to-member-for-admins-only"},"downgrade admin to member for admins only"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"            await VChatController.instance.downgradeGroupAdmin(\n                      groupId: widget.groupId,\n                      userId: user.id,\n                    );\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"this api will throw exception if current user want to downgrade him self or the group creator")),(0,a.kt)("h2",{id:"upgrade-member-to-admin-for-admins-only"},"upgrade member to admin for admins only"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"    await VChatController.instance.upgradeGroupUser(\n                        groupId: widget.groupId, userId: user.id);\n")),(0,a.kt)("h2",{id:"kick-user-from-group-for-admins-only"},"kick user from group for admins only"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"              await VChatController.instance.kickUserFromGroup(\n                  groupId: widget.groupId, kickedId: user.id);\n")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"will delete user from group only if this user in the group"),(0,a.kt)("li",{parentName:"ol"},"and current user is admin"),(0,a.kt)("li",{parentName:"ol"},"admin can delete admin but cant delete the group creator"),(0,a.kt)("li",{parentName:"ol"},"group creator can delete any user but can't be deleted")),(0,a.kt)("h4",{id:"from-admins-mean-if-member-try-to-update-will-trow-exception-you-dont-have-access"},"From admins mean if member try to update will trow exception ",(0,a.kt)("inlineCode",{parentName:"h4"},"you dont have access")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/hatemragab/v_chat_sdk/blob/99be06c3a77f360e7d48a6c0fec33f9be3818b48/example/lib/screens/group_chat_info/group_chat_info.dart"},"More info here With Example")))}m.isMDXComponent=!0}}]);